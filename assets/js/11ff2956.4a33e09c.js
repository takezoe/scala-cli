"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8134],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),o=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=o(n),d=i,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(f,l(l({ref:t},p),{},{components:n})):a.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var o=2;o<r;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9861:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return p},default:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],s={title:"Scripts",sidebar_position:19},c="Scripts",o={unversionedId:"guides/scripts",id:"guides/scripts",isDocsHomePage:!1,title:"Scripts",description:"Scala-cli accepts Scala scripts, ending in .sc. Unlike .scala files,",source:"@site/docs/guides/scripts.md",sourceDirName:"guides",slug:"/guides/scripts",permalink:"/docs/guides/scripts",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/guides/scripts.md",tags:[],version:"current",sidebarPosition:19,frontMatter:{title:"Scripts",sidebar_position:19},sidebar:"tutorialSidebar",previous:{title:"SBT and Mill",permalink:"/docs/guides/sbt-mill"},next:{title:"Scala.JS",permalink:"/docs/guides/scala-js"}},p=[{value:"Aguments",id:"aguments",children:[],level:3},{value:"Self executable Scala Script",id:"self-executable-scala-script",children:[],level:3},{value:"Difference with Ammonite scripts",id:"difference-with-ammonite-scripts",children:[],level:3}],u={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"scripts"},"Scripts"),(0,r.kt)("p",null,"Scala-cli accepts Scala scripts, ending in ",(0,r.kt)("inlineCode",{parentName:"p"},".sc"),". Unlike ",(0,r.kt)("inlineCode",{parentName:"p"},".scala")," files,\nany kind of statement is accepted at the top level:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=hello.sc",title:"hello.sc"},'val message = "Hello from Scala script"\nprintln(message)\n')),(0,r.kt)("p",null,"Run it with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli hello.sc\n# Hello from Scala script\n")),(0,r.kt)("p",null,"In more detail, such a script is wrapped in an ",(0,r.kt)("inlineCode",{parentName:"p"},"object")," before being passed to\nthe Scala compiler, and a ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," class is added to it. ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.sc")," is passed as"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'object hello {\n  val message = "Hello from Scala script"\n  println(message)\n\n  def main(args: Array[String]): Unit = ()\n}\n')),(0,r.kt)("p",null,"(reformatted for clarity)\nThe name ",(0,r.kt)("inlineCode",{parentName:"p"},"hello")," comes straight from the file name ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.sc"),"."),(0,r.kt)("p",null,"When a script is in a sub-directory of a directory passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," , a package is inferred too:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=my-app/constants/messages.sc",title:"my-app/constants/messages.sc"},'def hello = "Hello from Scala scripts"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=my-app/main.sc",title:"my-app/main.sc"},"import constants.messages\nprintln(messages.hello)\n")),(0,r.kt)("p",null,"Run them with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli my-app --main-class main\n# Hello from Scala scripts\n")),(0,r.kt)("p",null,"Note that we pass an explicit main class. Both scripts automatically get a main class, so this\nis required to disambiguate them."),(0,r.kt)("h3",{id:"aguments"},"Aguments"),(0,r.kt)("p",null,"You may also pass args to your script, it is referenced via the special variable ",(0,r.kt)("inlineCode",{parentName:"p"},"args"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=p.sc",title:"p.sc"},"#!/usr/bin/env scala-cli\n\nprintln(args(1))\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x p.sc\n./p.sc hello world\n# world\n")),(0,r.kt)("h3",{id:"self-executable-scala-script"},"Self executable Scala Script"),(0,r.kt)("p",null,'You can define file with a "shebang" header, to make it executable in itself. It could be also run as a normal script.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=HelloScript.sc",title:"HelloScript.sc"},'#!/usr/bin/env scala-cli\n\nprintln("Hello world")\n')),(0,r.kt)("p",null,"Make it executable and run it as an any other script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x HelloScript.sc\n./HelloScript.sc\n# Hello world\n")),(0,r.kt)("h3",{id:"difference-with-ammonite-scripts"},"Difference with Ammonite scripts"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://ammonite.io"},"Ammonite")," is a popular REPL for Scala, that is also able to compile and run\n",(0,r.kt)("inlineCode",{parentName:"p"},".sc")," files."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," and Ammonite differ significantly when your code is split in multiple scripts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"in Ammonite, a script needs to use ",(0,r.kt)("inlineCode",{parentName:"li"},"import $file")," directives to use values defined in another script"),(0,r.kt)("li",{parentName:"ul"},"with ",(0,r.kt)("inlineCode",{parentName:"li"},"scala-cli")," , all scripts passed can reference each other, without such directives")),(0,r.kt)("p",null,"On the other hand,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'you can pass a single "entry point" script as input to Ammonite, and Ammonite finds the scripts\nit depends on via the ',(0,r.kt)("inlineCode",{parentName:"li"},"import $file")," directives"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scala-cli")," requires all scripts to be passed beforehand, either one-by-one, or by putting them in a\ndirectory, and passing the directory to ",(0,r.kt)("inlineCode",{parentName:"li"},"scala-cli"))))}m.isMDXComponent=!0}}]);