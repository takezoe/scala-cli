"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7915],{3905:function(e,a,n){n.d(a,{Zo:function(){return p},kt:function(){return m}});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=t.createContext({}),c=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?t.createElement(v,o(o({ref:a},p),{},{components:n})):t.createElement(v,o({ref:a},p))}));function m(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3891:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var t=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={title:"Picking Scala version with scala-cli",sidebar_position:2},s="Picking Scala version with scala-cli",c={unversionedId:"cookbooks/scala-versions",id:"cookbooks/scala-versions",isDocsHomePage:!1,title:"Picking Scala version with scala-cli",description:"Scala cli by default runs latest stable Scala version.",source:"@site/docs/cookbooks/scala-versions.md",sourceDirName:"cookbooks",slug:"/cookbooks/scala-versions",permalink:"/docs/cookbooks/scala-versions",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/cookbooks/scala-versions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Picking Scala version with scala-cli",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Package Scala application as an executable file",permalink:"/docs/cookbooks/scala-package"},next:{title:"Use scala-cli to run Scala Scripts",permalink:"/docs/cookbooks/scala-scripts"}},p=[{value:"When should I provide a full version of Scala?",id:"when-should-i-provide-a-full-version-of-scala",children:[],level:2}],u={toc:p};function d(e){var a=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"picking-scala-version-with-scala-cli"},"Picking Scala version with scala-cli"),(0,r.kt)("p",null,"Scala cli by default runs latest stable Scala version."),(0,r.kt)("p",null,"Here is an universal piece of code that detects Scala version at runtime. Code is a bit complicated so we suggest to skip reading the whole file and just focus on what it prints."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=ScalaVersion.scala",title:"ScalaVersion.scala"},'object ScalaVersion extends App {\n  def props(url: java.net.URL): java.util.Properties = {\n    val properties = new java.util.Properties()\n    val is = url.openStream()\n    try {\n      properties.load(is)\n      properties\n    } finally is.close()\n  }\n\n  def scala2Version: String =\n    props(getClass.getResource("/library.properties")).getProperty("version.number")\n\n  def checkScala3(res: java.util.Enumeration[java.net.URL]): String =\n    if (!res.hasMoreElements) scala2Version else {\n      val manifest = props(res.nextElement)\n      manifest.getProperty("Specification-Title") match {\n        case "scala3-library-bootstrapped" =>\n          manifest.getProperty("Implementation-Version")\n        case _ => checkScala3(res)\n      }\n    }\n  val manifests = getClass.getClassLoader.getResources("META-INF/MANIFEST.MF")\n\n  val scalaVersion = checkScala3(manifests)\n  val javaVersion = System.getProperty("java.version")\n\n  println(s"Scala: $scalaVersion")\n}\n')),(0,r.kt)("p",null,"When run without any version provided:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli ScalaVersion.scala\n")),(0,r.kt)("p",null,"It will run using latest stable release of Scala (3.1.0 at the time of writing this doc.)"),(0,r.kt)("p",null,"Scala version can be also provided from command line using ",(0,r.kt)("inlineCode",{parentName:"p"},"--scala")," (with ",(0,r.kt)("inlineCode",{parentName:"p"},"-S")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"--scala-version")," aliases)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli -S 2.13.5 ScalaVersion.scala\n")),(0,r.kt)("p",null,"In most cases we do not care for a precise Scala version and 'any Scala 2' or ",(0,r.kt)("inlineCode",{parentName:"p"},"2.13")," is good enough for us."),(0,r.kt)("p",null,"Scala cli accepts version prefixes so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli -S 2 ScalaVersion.scala\n")),(0,r.kt)("p",null,"will result in picking up a latest stable release for Scala 2 (",(0,r.kt)("inlineCode",{parentName:"p"},"2.13.6")," as of when this doc is written) and"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli -S 2.12 ScalaVersion.scala\n")),(0,r.kt)("p",null,"will use latest stable release of ",(0,r.kt)("inlineCode",{parentName:"p"},"2.12")," ",(0,r.kt)("inlineCode",{parentName:"p"},"2.12.15"),"."),(0,r.kt)("p",null,"We can also pin the version of the language within the .scala file with ",(0,r.kt)("inlineCode",{parentName:"p"},"using directives"),". You can read our more how using directives works in documentation and examples."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Using directives syntax is still experimental and may change in future versions of scala-cli"))),(0,r.kt)("p",null,"So when we will have:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=version.scala",title:"version.scala"},"// using scala 2.12.5\n\nobject OldCode\n//rest of the config\n")),(0,r.kt)("p",null,"and run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli ScalaVersion.scala version.scala\n")),(0,r.kt)("p",null,"We will results in using ",(0,r.kt)("inlineCode",{parentName:"p"},"2.12.5"),"."),(0,r.kt)("p",null,"scala-cli is command-line first so any configuration pass to command line will override using directives."),(0,r.kt)("p",null,"So, running"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli -S 2.13.5 ScalaVersion.scala version.scala\n")),(0,r.kt)("p",null,"Will result in using ",(0,r.kt)("inlineCode",{parentName:"p"},"2.13.5")),(0,r.kt)("h2",{id:"when-should-i-provide-a-full-version-of-scala"},"When should I provide a full version of Scala?"),(0,r.kt)("p",null,"For prototyping, scripting and other use cases that does not require to run code multiple times in the future proving version is not required."),(0,r.kt)("p",null,"Scala is source and binary compatible within each major version (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"2.12.x")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"3.1.x"),") so providing version in ",(0,r.kt)("inlineCode",{parentName:"p"},"eopch.major")," form (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"2.12"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"2.13")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"3.1"),") should be perfectly fine for most use cases. When your Scala code contains more advanced features that may be more sensitive for changes in minor version (e.g. from ",(0,r.kt)("inlineCode",{parentName:"p"},"2.13.4")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"2.13.5"),") we recommend using complete Scala version."))}d.isMDXComponent=!0}}]);